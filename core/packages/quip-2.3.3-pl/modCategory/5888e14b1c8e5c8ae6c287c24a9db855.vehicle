<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Snippets' => 
    array (
      '5b2846382ff006e5f56823d12a085206' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"Quip","description":"A simple commenting component.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Quip\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Quip, a simple commenting component for MODx Revolution.\\n *\\n * Quip is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Quip is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Quip; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package quip\\n *\\/\\n\\/**\\n * Quip\\n *\\n * A simple comments component.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\n * @name Quip\\n * @author Shaun McCormick <shaun@modx.com>\\n * @package quip\\n *\\/\\n\\/** @var Quip $quip *\\/\\n$quip = $modx->getService(\'quip\',\'Quip\',$modx->getOption(\'quip.core_path\',null,$modx->getOption(\'core_path\').\'components\\/quip\\/\').\'model\\/quip\\/\',$scriptProperties);\\nif (!($quip instanceof Quip)) return \'\';\\n\\n$quip->initialize($modx->context->get(\'key\'));\\n\\n$controller = $quip->loadController(\'Thread\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;","locked":0,"properties":"a:50:{s:6:\\"thread\\";a:7:{s:4:\\"name\\";s:6:\\"thread\\";s:4:\\"desc\\";s:21:\\"quip.prop_thread_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"parent\\";a:7:{s:4:\\"name\\";s:6:\\"parent\\";s:4:\\"desc\\";s:21:\\"quip.prop_parent_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"0\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"threaded\\";a:7:{s:4:\\"name\\";s:8:\\"threaded\\";s:4:\\"desc\\";s:23:\\"quip.prop_threaded_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"maxDepth\\";a:7:{s:4:\\"name\\";s:8:\\"maxDepth\\";s:4:\\"desc\\";s:23:\\"quip.prop_maxdepth_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:5;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"replyResourceId\\";a:7:{s:4:\\"name\\";s:15:\\"replyResourceId\\";s:4:\\"desc\\";s:30:\\"quip.prop_replyresourceid_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:18:\\"threadedPostMargin\\";a:7:{s:4:\\"name\\";s:18:\\"threadedPostMargin\\";s:4:\\"desc\\";s:33:\\"quip.prop_threadedpostmargin_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:15;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"requireAuth\\";a:7:{s:4:\\"name\\";s:11:\\"requireAuth\\";s:4:\\"desc\\";s:26:\\"quip.prop_requireauth_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"requireUsergroups\\";a:7:{s:4:\\"name\\";s:17:\\"requireUsergroups\\";s:4:\\"desc\\";s:32:\\"quip.prop_requireusergroups_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"closed\\";a:7:{s:4:\\"name\\";s:6:\\"closed\\";s:4:\\"desc\\";s:21:\\"quip.prop_closed_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"closeAfter\\";a:7:{s:4:\\"name\\";s:10:\\"closeAfter\\";s:4:\\"desc\\";s:25:\\"quip.prop_closeafter_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:14;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"dateFormat\\";a:7:{s:4:\\"name\\";s:10:\\"dateFormat\\";s:4:\\"desc\\";s:25:\\"quip.prop_dateformat_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:21:\\"%b %d, %Y at %I:%M %p\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"useMargins\\";a:7:{s:4:\\"name\\";s:10:\\"useMargins\\";s:4:\\"desc\\";s:25:\\"quip.prop_usemargins_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"useCss\\";a:7:{s:4:\\"name\\";s:6:\\"useCss\\";s:4:\\"desc\\";s:21:\\"quip.prop_usecss_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"rowCss\\";a:7:{s:4:\\"name\\";s:6:\\"rowCss\\";s:4:\\"desc\\";s:21:\\"quip.prop_rowcss_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"quip-comment\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"altRowCss\\";a:7:{s:4:\\"name\\";s:9:\\"altRowCss\\";s:4:\\"desc\\";s:24:\\"quip.prop_altrowcss_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:16:\\"quip-comment-alt\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"olCss\\";a:7:{s:4:\\"name\\";s:5:\\"olCss\\";s:4:\\"desc\\";s:20:\\"quip.prop_olcss_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:19:\\"quip-comment-parent\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"unapprovedCss\\";a:7:{s:4:\\"name\\";s:13:\\"unapprovedCss\\";s:4:\\"desc\\";s:28:\\"quip.prop_unapprovedcss_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:15:\\"quip-unapproved\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"authorTpl\\";a:7:{s:4:\\"name\\";s:9:\\"authorTpl\\";s:4:\\"desc\\";s:24:\\"quip.prop_authortpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:13:\\"quipAuthorTpl\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"nameField\\";a:7:{s:4:\\"name\\";s:9:\\"nameField\\";s:4:\\"desc\\";s:24:\\"quip.prop_namefield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"username\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"showAnonymousName\\";a:7:{s:4:\\"name\\";s:17:\\"showAnonymousName\\";s:4:\\"desc\\";s:32:\\"quip.prop_showanonymousname_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"anonymousName\\";a:7:{s:4:\\"name\\";s:13:\\"anonymousName\\";s:4:\\"desc\\";s:28:\\"quip.prop_anonymousname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"allowRemove\\";a:7:{s:4:\\"name\\";s:11:\\"allowRemove\\";s:4:\\"desc\\";s:26:\\"quip.prop_allowremove_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"removeThreshold\\";a:7:{s:4:\\"name\\";s:15:\\"removeThreshold\\";s:4:\\"desc\\";s:30:\\"quip.prop_removethreshold_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:3;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"allowReportAsSpam\\";a:7:{s:4:\\"name\\";s:17:\\"allowReportAsSpam\\";s:4:\\"desc\\";s:32:\\"quip.prop_allowreportasspam_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"useGravatar\\";a:7:{s:4:\\"name\\";s:11:\\"useGravatar\\";s:4:\\"desc\\";s:26:\\"quip.prop_usegravatar_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"gravatarIcon\\";a:7:{s:4:\\"name\\";s:12:\\"gravatarIcon\\";s:4:\\"desc\\";s:27:\\"quip.prop_gravataricon_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"identicon\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"gravatarSize\\";a:7:{s:4:\\"name\\";s:12:\\"gravatarSize\\";s:4:\\"desc\\";s:27:\\"quip.prop_gravatarsize_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:50;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortBy\\";a:7:{s:4:\\"name\\";s:6:\\"sortBy\\";s:4:\\"desc\\";s:21:\\"quip.prop_sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"rank\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"sortByAlias\\";a:7:{s:4:\\"name\\";s:11:\\"sortByAlias\\";s:4:\\"desc\\";s:26:\\"quip.prop_sortbyalias_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:12:\\"quip.comment\\";s:5:\\"value\\";s:11:\\"quipComment\\";}i:1;a:2:{s:4:\\"text\\";s:11:\\"quip.author\\";s:5:\\"value\\";s:6:\\"Author\\";}}s:5:\\"value\\";s:11:\\"quipComment\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortDir\\";a:7:{s:4:\\"name\\";s:7:\\"sortDir\\";s:4:\\"desc\\";s:22:\\"quip.prop_sortdir_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:14:\\"quip.ascending\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:15:\\"quip.descending\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:28:\\"quip.prop_toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:32:\\"quip.prop_placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"quip\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"tplComment\\";a:7:{s:4:\\"name\\";s:10:\\"tplComment\\";s:4:\\"desc\\";s:25:\\"quip.prop_tplcomment_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"quipComment\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"tplCommentOptions\\";a:7:{s:4:\\"name\\";s:17:\\"tplCommentOptions\\";s:4:\\"desc\\";s:32:\\"quip.prop_tplcommentoptions_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:18:\\"quipCommentOptions\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"tplComments\\";a:7:{s:4:\\"name\\";s:11:\\"tplComments\\";s:4:\\"desc\\";s:26:\\"quip.prop_tplcomments_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"quipComments\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"tplReport\\";a:7:{s:4:\\"name\\";s:9:\\"tplReport\\";s:4:\\"desc\\";s:24:\\"quip.prop_tplreport_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"quipReport\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"reportAction\\";a:7:{s:4:\\"name\\";s:12:\\"reportAction\\";s:4:\\"desc\\";s:27:\\"quip.prop_reportaction_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"quip_report\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"removeAction\\";a:7:{s:4:\\"name\\";s:12:\\"removeAction\\";s:4:\\"desc\\";s:27:\\"quip.prop_removeaction_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"quip_remove\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"idPrefix\\";a:7:{s:4:\\"name\\";s:8:\\"idPrefix\\";s:4:\\"desc\\";s:23:\\"quip.prop_idprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"qcom\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"debug\\";a:7:{s:4:\\"name\\";s:5:\\"debug\\";s:4:\\"desc\\";s:20:\\"quip.prop_debug_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"debugUser\\";a:7:{s:4:\\"name\\";s:9:\\"debugUser\\";s:4:\\"desc\\";s:24:\\"quip.prop_debuguser_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"debugUserId\\";a:7:{s:4:\\"name\\";s:11:\\"debugUserId\\";s:4:\\"desc\\";s:26:\\"quip.prop_debuguserid_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:20:\\"quip.prop_limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"start\\";a:7:{s:4:\\"name\\";s:5:\\"start\\";s:4:\\"desc\\";s:20:\\"quip.prop_start_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"tplPagination\\";a:7:{s:4:\\"name\\";s:13:\\"tplPagination\\";s:4:\\"desc\\";s:28:\\"quip.prop_tplpagination_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:14:\\"quipPagination\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"tplPaginationItem\\";a:7:{s:4:\\"name\\";s:17:\\"tplPaginationItem\\";s:4:\\"desc\\";s:32:\\"quip.prop_tplpaginationitem_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:18:\\"quipPaginationItem\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:24:\\"tplPaginationCurrentItem\\";a:7:{s:4:\\"name\\";s:24:\\"tplPaginationCurrentItem\\";s:4:\\"desc\\";s:39:\\"quip.prop_tplpaginationcurrentitem_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:25:\\"quipPaginationCurrentItem\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"paginationCls\\";a:7:{s:4:\\"name\\";s:13:\\"paginationCls\\";s:4:\\"desc\\";s:28:\\"quip.prop_paginationcls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:15:\\"quip-pagination\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"pageCls\\";a:7:{s:4:\\"name\\";s:7:\\"pageCls\\";s:4:\\"desc\\";s:22:\\"quip.prop_pagecls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:16:\\"quip-page-number\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"currentPageCls\\";a:7:{s:4:\\"name\\";s:14:\\"currentPageCls\\";s:4:\\"desc\\";s:29:\\"quip.prop_currentpagecls_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:17:\\"quip-page-current\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Quip\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Quip, a simple commenting component for MODx Revolution.\\n *\\n * Quip is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Quip is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Quip; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package quip\\n *\\/\\n\\/**\\n * Quip\\n *\\n * A simple comments component.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\n * @name Quip\\n * @author Shaun McCormick <shaun@modx.com>\\n * @package quip\\n *\\/\\n\\/** @var Quip $quip *\\/\\n$quip = $modx->getService(\'quip\',\'Quip\',$modx->getOption(\'quip.core_path\',null,$modx->getOption(\'core_path\').\'components\\/quip\\/\').\'model\\/quip\\/\',$scriptProperties);\\nif (!($quip instanceof Quip)) return \'\';\\n\\n$quip->initialize($modx->context->get(\'key\'));\\n\\n$controller = $quip->loadController(\'Thread\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;"}',
        'guid' => 'ae2cf36efe5d70cd2f1ae68fe90359fc',
        'native_key' => NULL,
        'signature' => '9c0f79d76d768fac1c3c0a0926480ab4',
      ),
      '93ad7b3e9d2a0c7b14b441b9358f5983' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"QuipCount","description":"An assistance snippet for getting thread\\/user comment counts.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Quip\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Quip, a simple commenting component for MODx Revolution.\\n *\\n * Quip is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Quip is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Quip; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package quip\\n *\\/\\n\\/**\\n * QuipCount\\n *\\n * Gets the total # of comments in a thread or by a user.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var Quip $quip\\n *\\n * @name QuipCount\\n * @author Shaun McCormick <shaun@modx.com>\\n * @package quip\\n *\\/\\n$quip = $modx->getService(\'quip\',\'Quip\',$modx->getOption(\'quip.core_path\',null,$modx->getOption(\'core_path\').\'components\\/quip\\/\').\'model\\/quip\\/\',$scriptProperties);\\nif (!($quip instanceof Quip)) return \'\';\\n$quip->initialize($modx->context->get(\'key\'));\\n$controller = $quip->loadController(\'ThreadCount\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;","locked":0,"properties":"a:5:{s:4:\\"type\\";a:7:{s:4:\\"name\\";s:4:\\"type\\";s:4:\\"desc\\";s:25:\\"quip.prop_count_type_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:3:{i:0;a:2:{s:4:\\"text\\";s:11:\\"quip.thread\\";s:5:\\"value\\";s:6:\\"thread\\";}i:1;a:2:{s:4:\\"text\\";s:9:\\"quip.user\\";s:5:\\"value\\";s:4:\\"user\\";}i:2;a:2:{s:4:\\"text\\";s:11:\\"quip.family\\";s:5:\\"value\\";s:6:\\"family\\";}}s:5:\\"value\\";s:6:\\"thread\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"thread\\";a:7:{s:4:\\"name\\";s:6:\\"thread\\";s:4:\\"desc\\";s:27:\\"quip.prop_count_thread_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"user\\";a:7:{s:4:\\"name\\";s:4:\\"user\\";s:4:\\"desc\\";s:25:\\"quip.prop_count_user_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"family\\";a:7:{s:4:\\"name\\";s:6:\\"family\\";s:4:\\"desc\\";s:27:\\"quip.prop_count_family_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:34:\\"quip.prop_count_toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Quip\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Quip, a simple commenting component for MODx Revolution.\\n *\\n * Quip is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Quip is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Quip; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package quip\\n *\\/\\n\\/**\\n * QuipCount\\n *\\n * Gets the total # of comments in a thread or by a user.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var Quip $quip\\n *\\n * @name QuipCount\\n * @author Shaun McCormick <shaun@modx.com>\\n * @package quip\\n *\\/\\n$quip = $modx->getService(\'quip\',\'Quip\',$modx->getOption(\'quip.core_path\',null,$modx->getOption(\'core_path\').\'components\\/quip\\/\').\'model\\/quip\\/\',$scriptProperties);\\nif (!($quip instanceof Quip)) return \'\';\\n$quip->initialize($modx->context->get(\'key\'));\\n$controller = $quip->loadController(\'ThreadCount\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;"}',
        'guid' => '5432956812aa2ceff2ba28f3e14d6aa4',
        'native_key' => NULL,
        'signature' => '9734ed9b8f5166e5b4487eb599cb1d72',
      ),
      '5e5da38448c53a14def81cd05850d875' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"QuipLatestComments","description":"An assistance snippet for getting the latest comments for the whole site or a thread or user.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Quip\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Quip, a simple commenting component for MODx Revolution.\\n *\\n * Quip is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Quip is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Quip; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package quip\\n *\\/\\n\\/**\\n * QuipLatestComments\\n *\\n * Gets latest comments in a thread or by a user.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var Quip $quip\\n * \\n * @name QuipLatestComments\\n * @author Shaun McCormick <shaun@modx.com>\\n * @package quip\\n *\\/\\n$quip = $modx->getService(\'quip\',\'Quip\',$modx->getOption(\'quip.core_path\',null,$modx->getOption(\'core_path\').\'components\\/quip\\/\').\'model\\/quip\\/\',$scriptProperties);\\nif (!($quip instanceof Quip)) return \'\';\\n$quip->initialize($modx->context->get(\'key\'));\\n$controller = $quip->loadController(\'LatestComments\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;","locked":0,"properties":"a:18:{s:4:\\"type\\";a:7:{s:4:\\"name\\";s:4:\\"type\\";s:4:\\"desc\\";s:24:\\"quip.prop_late_type_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:5:\\"value\\";s:3:\\"all\\";s:4:\\"text\\";s:8:\\"quip.all\\";}i:1;a:2:{s:5:\\"value\\";s:6:\\"thread\\";s:4:\\"text\\";s:11:\\"quip.thread\\";}i:2;a:2:{s:5:\\"value\\";s:6:\\"family\\";s:4:\\"text\\";s:11:\\"quip.family\\";}i:3;a:2:{s:5:\\"value\\";s:4:\\"user\\";s:4:\\"text\\";s:9:\\"quip.user\\";}}s:5:\\"value\\";s:3:\\"all\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:23:\\"quip.prop_late_tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:17:\\"quipLatestComment\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"thread\\";a:7:{s:4:\\"name\\";s:6:\\"thread\\";s:4:\\"desc\\";s:26:\\"quip.prop_late_thread_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"user\\";a:7:{s:4:\\"name\\";s:4:\\"user\\";s:4:\\"desc\\";s:24:\\"quip.prop_late_user_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"family\\";a:7:{s:4:\\"name\\";s:6:\\"family\\";s:4:\\"desc\\";s:26:\\"quip.prop_late_family_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"stripTags\\";a:7:{s:4:\\"name\\";s:9:\\"stripTags\\";s:4:\\"desc\\";s:29:\\"quip.prop_late_striptags_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"dateFormat\\";a:7:{s:4:\\"name\\";s:10:\\"dateFormat\\";s:4:\\"desc\\";s:30:\\"quip.prop_late_dateformat_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:21:\\"%b %d, %Y at %I:%M %p\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"bodyLimit\\";a:7:{s:4:\\"name\\";s:9:\\"bodyLimit\\";s:4:\\"desc\\";s:29:\\"quip.prop_late_bodylimit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:30;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"rowCss\\";a:7:{s:4:\\"name\\";s:6:\\"rowCss\\";s:4:\\"desc\\";s:26:\\"quip.prop_late_rowcss_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:19:\\"quip-latest-comment\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"altRowCss\\";a:7:{s:4:\\"name\\";s:9:\\"altRowCss\\";s:4:\\"desc\\";s:29:\\"quip.prop_late_altrowcss_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:23:\\"quip-latest-comment-alt\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:25:\\"quip.prop_late_limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:5;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"start\\";a:7:{s:4:\\"name\\";s:5:\\"start\\";s:4:\\"desc\\";s:25:\\"quip.prop_late_start_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortBy\\";a:7:{s:4:\\"name\\";s:6:\\"sortBy\\";s:4:\\"desc\\";s:26:\\"quip.prop_late_sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"createdon\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"sortByAlias\\";a:7:{s:4:\\"name\\";s:11:\\"sortByAlias\\";s:4:\\"desc\\";s:31:\\"quip.prop_late_sortbyalias_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:12:\\"quip.comment\\";s:5:\\"value\\";s:11:\\"quipComment\\";}i:1;a:2:{s:4:\\"text\\";s:11:\\"quip.author\\";s:5:\\"value\\";s:6:\\"Author\\";}}s:5:\\"value\\";s:11:\\"quipComment\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortDir\\";a:7:{s:4:\\"name\\";s:7:\\"sortDir\\";s:4:\\"desc\\";s:27:\\"quip.prop_late_sortdir_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:14:\\"quip.ascending\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:15:\\"quip.descending\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"contexts\\";a:7:{s:4:\\"name\\";s:8:\\"contexts\\";s:4:\\"desc\\";s:28:\\"quip.prop_late_contexts_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:33:\\"quip.prop_late_toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:37:\\"quip.prop_late_placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"quip.latest\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Quip\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Quip, a simple commenting component for MODx Revolution.\\n *\\n * Quip is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Quip is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Quip; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package quip\\n *\\/\\n\\/**\\n * QuipLatestComments\\n *\\n * Gets latest comments in a thread or by a user.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var Quip $quip\\n * \\n * @name QuipLatestComments\\n * @author Shaun McCormick <shaun@modx.com>\\n * @package quip\\n *\\/\\n$quip = $modx->getService(\'quip\',\'Quip\',$modx->getOption(\'quip.core_path\',null,$modx->getOption(\'core_path\').\'components\\/quip\\/\').\'model\\/quip\\/\',$scriptProperties);\\nif (!($quip instanceof Quip)) return \'\';\\n$quip->initialize($modx->context->get(\'key\'));\\n$controller = $quip->loadController(\'LatestComments\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;"}',
        'guid' => 'd76dd6baa08d95639f5425eb73ce33ee',
        'native_key' => NULL,
        'signature' => '3617a47be11ad71a3ced0f889299a6ae',
      ),
      '4dd022c7ded8d92c3833541d69f470b1' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"QuipReply","description":"Displays a reply form for comments.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Quip\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Quip, a simple commenting component for MODx Revolution.\\n *\\n * Quip is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Quip is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Quip; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package quip\\n *\\/\\n\\/**\\n * Displays a reply form for a thread\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var Quip $quip\\n *\\n * @name QuipReply\\n * @author Shaun McCormick <shaun@modx.com>\\n * @package quip\\n *\\/\\n$quip = $modx->getService(\'quip\',\'Quip\',$modx->getOption(\'quip.core_path\',null,$modx->getOption(\'core_path\').\'components\\/quip\\/\').\'model\\/quip\\/\',$scriptProperties);\\nif (!($quip instanceof Quip)) return \'\';\\n\\n$quip->initialize($modx->context->get(\'key\'));\\n$controller = $quip->loadController(\'ThreadReply\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;\\n\\n\\/* get thread *\\/\\n$thread = $modx->getOption(\'quip_thread\',$_REQUEST,$modx->getOption(\'thread\',$scriptProperties,\'\'));\\nif (empty($thread)) return \'\';\\n$thread = $modx->getObject(\'quipThread\',array(\'name\' => $thread));\\nif (!$thread) return \'\';\\n\\n\\/* sync properties with thread row values *\\/\\n$thread->sync($scriptProperties);\\n$ps = $thread->get(\'quipreply_call_params\');\\nif (!empty($ps)) {\\n    $diff = array_diff_assoc($ps,$scriptProperties);\\n    if (empty($diff)) $diff = array_diff_assoc($scriptProperties,$ps);\\n}\\nif (empty($_REQUEST[\'quip_thread\']) && (!empty($diff) || empty($ps))) { \\/* only sync call params if not on threaded reply page *\\/\\n    $thread->set(\'quipreply_call_params\',$scriptProperties);\\n    $thread->save();\\n}\\n\\/* if in threaded reply page, get the original passing values to QuipReply in the thread\'s main page and use those *\\/\\nif (!empty($_REQUEST[\'quip_thread\']) && is_array($ps) && !empty($ps)) $scriptProperties = array_merge($scriptProperties,$ps);\\nunset($ps,$diff);\\n\\n\\/* setup default properties *\\/\\n$requireAuth = $modx->getOption(\'requireAuth\',$scriptProperties,false);\\n$requireUsergroups = $modx->getOption(\'requireUsergroups\',$scriptProperties,false);\\n$addCommentTpl = $modx->getOption(\'tplAddComment\',$scriptProperties,\'quipAddComment\');\\n$loginToCommentTpl = $modx->getOption(\'tplLoginToComment\',$scriptProperties,\'quipLoginToComment\');\\n$previewTpl = $modx->getOption(\'tplPreview\',$scriptProperties,\'quipPreviewComment\');\\n$closeAfter = $modx->getOption(\'closeAfter\',$scriptProperties,14);\\n$requirePreview = $modx->getOption(\'requirePreview\',$scriptProperties,false);\\n$previewAction = $modx->getOption(\'previewAction\',$scriptProperties,\'quip-preview\');\\n$postAction = $modx->getOption(\'postAction\',$scriptProperties,\'quip-post\');\\n$allowedTags = $modx->getOption(\'quip.allowed_tags\',$scriptProperties,\'<br><b><i>\');\\n$preHooks = $modx->getOption(\'preHooks\',$scriptProperties,\'\');\\n$postHooks = $modx->getOption(\'postHooks\',$scriptProperties,\'\');\\n$unsubscribeAction = $modx->getOption(\'unsubscribeAction\',$scriptProperties,\'quip_unsubscribe\');\\n\\n\\/* get parent and auth *\\/\\n$parent = $modx->getOption(\'quip_parent\',$_REQUEST,$modx->getOption(\'parent\',$scriptProperties,0));\\n$hasAuth = $modx->user->hasSessionContext($modx->context->get(\'key\')) || $modx->getOption(\'debug\',$scriptProperties,false) || empty($requireAuth);\\nif (!empty($requireUsergroups)) {\\n    $requireUsergroups = explode(\',\',$requireUsergroups);\\n    $hasAuth = $modx->user->isMember($requireUsergroups);\\n}\\n\\n\\/* setup default placeholders *\\/\\n$placeholders = array();\\n$p = $modx->request->getParameters();\\nunset($p[\'reported\'],$p[\'quip_approved\']);\\n$placeholders[\'parent\'] = $parent;\\n$placeholders[\'thread\'] = $thread->get(\'name\');\\n$placeholders[\'url\'] = $modx->makeUrl($modx->resource->get(\'id\'),\'\',$p);\\n$placeholders[\'idprefix\'] = $thread->get(\'idprefix\');\\n\\n\\/* handle POST *\\/\\n$fields = array();\\n$hasPreview = false;\\nif (!empty($_POST)) {\\n    foreach ($_POST as $k => $v) {\\n        $fields[$k] = str_replace(array(\'[\',\']\'),array(\'&#91;\',\'&#93;\'),$v);\\n    }\\n    \\n    $fields[\'name\'] = strip_tags($fields[\'name\']);\\n    $fields[\'email\'] = strip_tags($fields[\'email\']);\\n    $fields[\'website\'] = strip_tags($fields[\'website\']);\\n    \\n    \\/* verify a message was posted *\\/\\n    if (empty($fields[\'comment\'])) $errors[\'comment\'] = $modx->lexicon(\'quip.message_err_ns\');\\n    if (empty($fields[\'name\'])) $errors[\'name\'] = $modx->lexicon(\'quip.name_err_ns\');\\n    if (empty($fields[\'email\'])) $errors[\'email\'] = $modx->lexicon(\'quip.email_err_ns\');\\n    \\n    if (!empty($_POST[$postAction]) && empty($errors)) {\\n        $comment = include_once $quip->config[\'processorsPath\'].\'web\\/comment\\/create.php\';\\n        if (is_object($comment) && $comment instanceof quipComment) {\\n            $params = $modx->request->getParameters();\\n            unset($params[$postAction],$params[\'quip_parent\'],$params[\'quip_thread\']);\\n            $params[\'quip_approved\'] = $comment->get(\'approved\') ? 1 : 0;\\n            $url = $comment->makeUrl(\'\',$params);\\n\\n            \\/* if not approved, remove # and replace with success message #\\n             * since comment is not yet visible\\n             *\\/\\n            if (!$comment->get(\'approved\')) {\\n                $url = str_replace(\'#\'.$thread->get(\'idprefix\').$comment->get(\'id\'),\'#quip-success-\'.$thread->get(\'idprefix\'),$url);\\n            }\\n            $modx->sendRedirect($url);\\n        } else if (is_array($comment)) {\\n            $errors = array_merge($errors,$comment);\\n        }\\n        $fields[$previewAction] = true;\\n    }\\n    \\/* handle preview *\\/\\n    else if (!empty($fields[$previewAction]) && empty($errors)) {\\n        $errors = include_once $quip->config[\'processorsPath\'].\'web\\/comment\\/preview.php\';\\n    }\\n    if (!empty($errors)) {\\n        $placeholders[\'error\'] = implode(\\"<br \\/>\\\\n\\",$errors);\\n        foreach ($errors as $k => $v) {\\n            $placeholders[\'error.\'.$k] = $v;\\n        }\\n        $placeholders = array_merge($placeholders,$fields);\\n    }\\n}\\n\\/* display moderated success message *\\/\\nif (isset($_GET[\'quip_approved\']) && $_GET[\'quip_approved\'] == 0) {\\n    $placeholders[\'successMsg\'] = $modx->lexicon(\'quip.comment_will_be_moderated\');\\n}\\n\\n\\/* handle unsubscribing from thread *\\/\\nif (!empty($_GET[$unsubscribeAction]) && $modx->user->hasSessionContext($modx->context->get(\'key\'))) {\\n    $profile = $modx->user->getOne(\'Profile\');\\n    if ($profile) {\\n        $notify = $modx->getObject(\'quipCommentNotify\',array(\\n            \'email\' => $profile->get(\'email\'),\\n            \'thread\' => $thread,\\n        ));\\n        if ($notify && $notify->remove()) {\\n            $placeholders[\'successMsg\'] = $modx->lexicon(\'quip.unsubscribed\');\\n        }\\n    }\\n}\\n\\n\\/* if using recaptcha, load recaptcha html if user is not logged in *\\/\\n$disableRecaptchaWhenLoggedIn = (boolean)$modx->getOption(\'disableRecaptchaWhenLoggedIn\',$scriptProperties,true);\\n$useRecaptcha = (boolean)$modx->getOption(\'recaptcha\',$scriptProperties,false);\\nif ($useRecaptcha && !($disableRecaptchaWhenLoggedIn && $hasAuth) && !$hasPreview) {\\n    $recaptcha = $modx->getService(\'recaptcha\',\'reCaptcha\',$quip->config[\'modelPath\'].\'recaptcha\\/\');\\n    if ($recaptcha instanceof reCaptcha) {\\n        $recaptchaTheme = $modx->getOption(\'recaptchaTheme\',$scriptProperties,\'clean\');\\n        $html = $recaptcha->getHtml($recaptchaTheme);\\n        $modx->setPlaceholder(\'quip.recaptcha_html\',$html);\\n    } else {\\n        return $modx->lexicon(\'quip.recaptcha_err_load\');\\n    }\\n}\\n\\n\\/* build reply form *\\/\\n$replyForm = \'\';\\n\\n$stillOpen = $thread->checkIfStillOpen($closeAfter) && !$modx->getOption(\'closed\',$scriptProperties,false);\\nif ($hasAuth && $stillOpen) {\\n    $phs = array_merge($placeholders,array(\\n        \'username\' => $modx->user->get(\'username\'),\\n    ));\\n    $phs[\'unsubscribe\'] = \'\';\\n\\n    \\/* prefill fields *\\/\\n    $profile = $modx->user->getOne(\'Profile\');\\n    if ($profile) {\\n        $phs[\'name\'] = !empty($fields[\'name\']) ? $fields[\'name\'] : $profile->get(\'fullname\');\\n        $phs[\'email\'] = !empty($fields[\'email\']) ? $fields[\'email\'] : $profile->get(\'email\');\\n        $phs[\'website\'] = !empty($fields[\'website\']) ? $fields[\'website\'] : $profile->get(\'website\');\\n\\n        \\/* allow for unsubscribing for logged-in users *\\/\\n        if ($modx->user->hasSessionContext($modx->context->get(\'key\'))) {\\n            $notify = $modx->getObject(\'quipCommentNotify\',array(\\n                \'email\' => $profile->get(\'email\'),\\n                \'thread\' => $thread,\\n            ));\\n            if ($notify) {\\n                $phs[\'notifyId\'] = $notify->get(\'id\');\\n                $phs[\'unsubscribe\'] = $quip->getChunk(\'quipUnsubscribe\',$phs);\\n                $params = $modx->request->getParameters();\\n                $params[$unsubscribeAction] = 1;\\n                $phs[\'unsubscribeUrl\'] = $modx->makeUrl($modx->resource->get(\'id\'),\'\',$params);\\n            }\\n        }\\n    }\\n\\n    \\/* if requirePreview == false, auto-can post *\\/\\n    if (!$requirePreview) {\\n        $phs[\'can_post\'] = true;\\n    }\\n    $phs[\'post_action\'] = $postAction;\\n    $phs[\'preview_action\'] = $previewAction;\\n    $phs[\'allowed_tags\'] = $allowedTags;\\n    $phs[\'notifyChecked\'] = !empty($fields[\'notify\']) ? \' checked=\\"checked\\"\' : \'\';\\n\\n    $replyForm = $quip->getChunk($addCommentTpl,$phs);\\n} else if (!$stillOpen) {\\n    $replyForm = $modx->lexicon(\'quip.thread_autoclosed\');\\n} else {\\n    $replyForm = $quip->getChunk($loginToCommentTpl,$placeholders);\\n}\\n\\n\\/* output or set to placeholder *\\/\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\nif ($toPlaceholder) {\\n    $modx->setPlaceholder($toPlaceholder,$replyForm);\\n    return \'\';\\n}\\nreturn $replyForm;","locked":0,"properties":"a:34:{s:11:\\"requireAuth\\";a:7:{s:4:\\"name\\";s:11:\\"requireAuth\\";s:4:\\"desc\\";s:32:\\"quip.prop_reply_requireauth_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"requireUsergroups\\";a:7:{s:4:\\"name\\";s:17:\\"requireUsergroups\\";s:4:\\"desc\\";s:38:\\"quip.prop_reply_requireusergroups_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"requirePreview\\";a:7:{s:4:\\"name\\";s:14:\\"requirePreview\\";s:4:\\"desc\\";s:35:\\"quip.prop_reply_requirepreview_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"closed\\";a:7:{s:4:\\"name\\";s:6:\\"closed\\";s:4:\\"desc\\";s:27:\\"quip.prop_reply_closed_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"closeAfter\\";a:7:{s:4:\\"name\\";s:10:\\"closeAfter\\";s:4:\\"desc\\";s:31:\\"quip.prop_reply_closeafter_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:14;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"moderate\\";a:7:{s:4:\\"name\\";s:8:\\"moderate\\";s:4:\\"desc\\";s:29:\\"quip.prop_reply_moderate_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:21:\\"moderateAnonymousOnly\\";a:7:{s:4:\\"name\\";s:21:\\"moderateAnonymousOnly\\";s:4:\\"desc\\";s:42:\\"quip.prop_reply_moderateanonymousonly_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:21:\\"moderateFirstPostOnly\\";a:7:{s:4:\\"name\\";s:21:\\"moderateFirstPostOnly\\";s:4:\\"desc\\";s:42:\\"quip.prop_reply_moderatefirstpostonly_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"moderators\\";a:7:{s:4:\\"name\\";s:10:\\"moderators\\";s:4:\\"desc\\";s:31:\\"quip.prop_reply_moderators_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"moderatorGroup\\";a:7:{s:4:\\"name\\";s:14:\\"moderatorGroup\\";s:4:\\"desc\\";s:35:\\"quip.prop_reply_moderatorgroup_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:13:\\"Administrator\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:24:\\"dontModerateManagerUsers\\";a:7:{s:4:\\"name\\";s:24:\\"dontModerateManagerUsers\\";s:4:\\"desc\\";s:45:\\"quip.prop_reply_dontmoderatemanagerusers_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"dateFormat\\";a:7:{s:4:\\"name\\";s:10:\\"dateFormat\\";s:4:\\"desc\\";s:31:\\"quip.prop_reply_dateformat_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:21:\\"%b %d, %Y at %I:%M %p\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"useCss\\";a:7:{s:4:\\"name\\";s:6:\\"useCss\\";s:4:\\"desc\\";s:27:\\"quip.prop_reply_usecss_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"notifyEmails\\";a:7:{s:4:\\"name\\";s:12:\\"notifyEmails\\";s:4:\\"desc\\";s:33:\\"quip.prop_reply_notifyemails_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"recaptcha\\";a:7:{s:4:\\"name\\";s:9:\\"recaptcha\\";s:4:\\"desc\\";s:30:\\"quip.prop_reply_recaptcha_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"recaptchaTheme\\";a:7:{s:4:\\"name\\";s:14:\\"recaptchaTheme\\";s:4:\\"desc\\";s:35:\\"quip.prop_reply_recaptchatheme_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:4:\\"text\\";s:12:\\"quip.opt_red\\";s:5:\\"value\\";s:3:\\"red\\";}i:1;a:2:{s:4:\\"text\\";s:14:\\"quip.opt_white\\";s:5:\\"value\\";s:5:\\"white\\";}i:2;a:2:{s:4:\\"text\\";s:14:\\"quip.opt_clean\\";s:5:\\"value\\";s:5:\\"clean\\";}i:3;a:2:{s:4:\\"text\\";s:19:\\"quip.opt_blackglass\\";s:5:\\"value\\";s:10:\\"blackglass\\";}}s:5:\\"value\\";s:5:\\"clean\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:28:\\"disableRecaptchaWhenLoggedIn\\";a:7:{s:4:\\"name\\";s:28:\\"disableRecaptchaWhenLoggedIn\\";s:4:\\"desc\\";s:49:\\"quip.prop_reply_disablerecaptchawhenloggedin_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"autoConvertLinks\\";a:7:{s:4:\\"name\\";s:16:\\"autoConvertLinks\\";s:4:\\"desc\\";s:37:\\"quip.prop_reply_autoconvertlinks_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:24:\\"extraAutoLinksAttributes\\";a:7:{s:4:\\"name\\";s:24:\\"extraAutoLinksAttributes\\";s:4:\\"desc\\";s:45:\\"quip.prop_reply_extraautolinksattributes_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"useGravatar\\";a:7:{s:4:\\"name\\";s:11:\\"useGravatar\\";s:4:\\"desc\\";s:32:\\"quip.prop_reply_usegravatar_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"gravatarIcon\\";a:7:{s:4:\\"name\\";s:12:\\"gravatarIcon\\";s:4:\\"desc\\";s:33:\\"quip.prop_reply_gravataricon_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"identicon\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"gravatarSize\\";a:7:{s:4:\\"name\\";s:12:\\"gravatarSize\\";s:4:\\"desc\\";s:33:\\"quip.prop_reply_gravatarsize_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:50;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"tplAddComment\\";a:7:{s:4:\\"name\\";s:13:\\"tplAddComment\\";s:4:\\"desc\\";s:34:\\"quip.prop_reply_tpladdcomment_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:14:\\"quipAddComment\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"tplLoginToComment\\";a:7:{s:4:\\"name\\";s:17:\\"tplLoginToComment\\";s:4:\\"desc\\";s:38:\\"quip.prop_reply_tpllogintocomment_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:18:\\"quipLoginToComment\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"tplPreview\\";a:7:{s:4:\\"name\\";s:10:\\"tplPreview\\";s:4:\\"desc\\";s:31:\\"quip.prop_reply_tplpreview_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:18:\\"quipPreviewComment\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"tplReport\\";a:7:{s:4:\\"name\\";s:9:\\"tplReport\\";s:4:\\"desc\\";s:30:\\"quip.prop_reply_tplreport_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"quipReport\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"postAction\\";a:7:{s:4:\\"name\\";s:10:\\"postAction\\";s:4:\\"desc\\";s:31:\\"quip.prop_reply_postaction_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"quip-post\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"previewAction\\";a:7:{s:4:\\"name\\";s:13:\\"previewAction\\";s:4:\\"desc\\";s:34:\\"quip.prop_reply_previewaction_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:12:\\"quip-preview\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"idPrefix\\";a:7:{s:4:\\"name\\";s:8:\\"idPrefix\\";s:4:\\"desc\\";s:29:\\"quip.prop_reply_idprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"qcom\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"redirectTo\\";a:7:{s:4:\\"name\\";s:10:\\"redirectTo\\";s:4:\\"desc\\";s:31:\\"quip.prop_reply_redirectto_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"redirectToUrl\\";a:7:{s:4:\\"name\\";s:13:\\"redirectToUrl\\";s:4:\\"desc\\";s:34:\\"quip.prop_reply_redirecttourl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"debug\\";a:7:{s:4:\\"name\\";s:5:\\"debug\\";s:4:\\"desc\\";s:26:\\"quip.prop_reply_debug_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"debugUser\\";a:7:{s:4:\\"name\\";s:9:\\"debugUser\\";s:4:\\"desc\\";s:30:\\"quip.prop_reply_debuguser_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"debugUserId\\";a:7:{s:4:\\"name\\";s:11:\\"debugUserId\\";s:4:\\"desc\\";s:32:\\"quip.prop_reply_debuguserid_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Quip\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Quip, a simple commenting component for MODx Revolution.\\n *\\n * Quip is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Quip is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Quip; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package quip\\n *\\/\\n\\/**\\n * Displays a reply form for a thread\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var Quip $quip\\n *\\n * @name QuipReply\\n * @author Shaun McCormick <shaun@modx.com>\\n * @package quip\\n *\\/\\n$quip = $modx->getService(\'quip\',\'Quip\',$modx->getOption(\'quip.core_path\',null,$modx->getOption(\'core_path\').\'components\\/quip\\/\').\'model\\/quip\\/\',$scriptProperties);\\nif (!($quip instanceof Quip)) return \'\';\\n\\n$quip->initialize($modx->context->get(\'key\'));\\n$controller = $quip->loadController(\'ThreadReply\');\\n$output = $controller->run($scriptProperties);\\nreturn $output;\\n\\n\\/* get thread *\\/\\n$thread = $modx->getOption(\'quip_thread\',$_REQUEST,$modx->getOption(\'thread\',$scriptProperties,\'\'));\\nif (empty($thread)) return \'\';\\n$thread = $modx->getObject(\'quipThread\',array(\'name\' => $thread));\\nif (!$thread) return \'\';\\n\\n\\/* sync properties with thread row values *\\/\\n$thread->sync($scriptProperties);\\n$ps = $thread->get(\'quipreply_call_params\');\\nif (!empty($ps)) {\\n    $diff = array_diff_assoc($ps,$scriptProperties);\\n    if (empty($diff)) $diff = array_diff_assoc($scriptProperties,$ps);\\n}\\nif (empty($_REQUEST[\'quip_thread\']) && (!empty($diff) || empty($ps))) { \\/* only sync call params if not on threaded reply page *\\/\\n    $thread->set(\'quipreply_call_params\',$scriptProperties);\\n    $thread->save();\\n}\\n\\/* if in threaded reply page, get the original passing values to QuipReply in the thread\'s main page and use those *\\/\\nif (!empty($_REQUEST[\'quip_thread\']) && is_array($ps) && !empty($ps)) $scriptProperties = array_merge($scriptProperties,$ps);\\nunset($ps,$diff);\\n\\n\\/* setup default properties *\\/\\n$requireAuth = $modx->getOption(\'requireAuth\',$scriptProperties,false);\\n$requireUsergroups = $modx->getOption(\'requireUsergroups\',$scriptProperties,false);\\n$addCommentTpl = $modx->getOption(\'tplAddComment\',$scriptProperties,\'quipAddComment\');\\n$loginToCommentTpl = $modx->getOption(\'tplLoginToComment\',$scriptProperties,\'quipLoginToComment\');\\n$previewTpl = $modx->getOption(\'tplPreview\',$scriptProperties,\'quipPreviewComment\');\\n$closeAfter = $modx->getOption(\'closeAfter\',$scriptProperties,14);\\n$requirePreview = $modx->getOption(\'requirePreview\',$scriptProperties,false);\\n$previewAction = $modx->getOption(\'previewAction\',$scriptProperties,\'quip-preview\');\\n$postAction = $modx->getOption(\'postAction\',$scriptProperties,\'quip-post\');\\n$allowedTags = $modx->getOption(\'quip.allowed_tags\',$scriptProperties,\'<br><b><i>\');\\n$preHooks = $modx->getOption(\'preHooks\',$scriptProperties,\'\');\\n$postHooks = $modx->getOption(\'postHooks\',$scriptProperties,\'\');\\n$unsubscribeAction = $modx->getOption(\'unsubscribeAction\',$scriptProperties,\'quip_unsubscribe\');\\n\\n\\/* get parent and auth *\\/\\n$parent = $modx->getOption(\'quip_parent\',$_REQUEST,$modx->getOption(\'parent\',$scriptProperties,0));\\n$hasAuth = $modx->user->hasSessionContext($modx->context->get(\'key\')) || $modx->getOption(\'debug\',$scriptProperties,false) || empty($requireAuth);\\nif (!empty($requireUsergroups)) {\\n    $requireUsergroups = explode(\',\',$requireUsergroups);\\n    $hasAuth = $modx->user->isMember($requireUsergroups);\\n}\\n\\n\\/* setup default placeholders *\\/\\n$placeholders = array();\\n$p = $modx->request->getParameters();\\nunset($p[\'reported\'],$p[\'quip_approved\']);\\n$placeholders[\'parent\'] = $parent;\\n$placeholders[\'thread\'] = $thread->get(\'name\');\\n$placeholders[\'url\'] = $modx->makeUrl($modx->resource->get(\'id\'),\'\',$p);\\n$placeholders[\'idprefix\'] = $thread->get(\'idprefix\');\\n\\n\\/* handle POST *\\/\\n$fields = array();\\n$hasPreview = false;\\nif (!empty($_POST)) {\\n    foreach ($_POST as $k => $v) {\\n        $fields[$k] = str_replace(array(\'[\',\']\'),array(\'&#91;\',\'&#93;\'),$v);\\n    }\\n    \\n    $fields[\'name\'] = strip_tags($fields[\'name\']);\\n    $fields[\'email\'] = strip_tags($fields[\'email\']);\\n    $fields[\'website\'] = strip_tags($fields[\'website\']);\\n    \\n    \\/* verify a message was posted *\\/\\n    if (empty($fields[\'comment\'])) $errors[\'comment\'] = $modx->lexicon(\'quip.message_err_ns\');\\n    if (empty($fields[\'name\'])) $errors[\'name\'] = $modx->lexicon(\'quip.name_err_ns\');\\n    if (empty($fields[\'email\'])) $errors[\'email\'] = $modx->lexicon(\'quip.email_err_ns\');\\n    \\n    if (!empty($_POST[$postAction]) && empty($errors)) {\\n        $comment = include_once $quip->config[\'processorsPath\'].\'web\\/comment\\/create.php\';\\n        if (is_object($comment) && $comment instanceof quipComment) {\\n            $params = $modx->request->getParameters();\\n            unset($params[$postAction],$params[\'quip_parent\'],$params[\'quip_thread\']);\\n            $params[\'quip_approved\'] = $comment->get(\'approved\') ? 1 : 0;\\n            $url = $comment->makeUrl(\'\',$params);\\n\\n            \\/* if not approved, remove # and replace with success message #\\n             * since comment is not yet visible\\n             *\\/\\n            if (!$comment->get(\'approved\')) {\\n                $url = str_replace(\'#\'.$thread->get(\'idprefix\').$comment->get(\'id\'),\'#quip-success-\'.$thread->get(\'idprefix\'),$url);\\n            }\\n            $modx->sendRedirect($url);\\n        } else if (is_array($comment)) {\\n            $errors = array_merge($errors,$comment);\\n        }\\n        $fields[$previewAction] = true;\\n    }\\n    \\/* handle preview *\\/\\n    else if (!empty($fields[$previewAction]) && empty($errors)) {\\n        $errors = include_once $quip->config[\'processorsPath\'].\'web\\/comment\\/preview.php\';\\n    }\\n    if (!empty($errors)) {\\n        $placeholders[\'error\'] = implode(\\"<br \\/>\\\\n\\",$errors);\\n        foreach ($errors as $k => $v) {\\n            $placeholders[\'error.\'.$k] = $v;\\n        }\\n        $placeholders = array_merge($placeholders,$fields);\\n    }\\n}\\n\\/* display moderated success message *\\/\\nif (isset($_GET[\'quip_approved\']) && $_GET[\'quip_approved\'] == 0) {\\n    $placeholders[\'successMsg\'] = $modx->lexicon(\'quip.comment_will_be_moderated\');\\n}\\n\\n\\/* handle unsubscribing from thread *\\/\\nif (!empty($_GET[$unsubscribeAction]) && $modx->user->hasSessionContext($modx->context->get(\'key\'))) {\\n    $profile = $modx->user->getOne(\'Profile\');\\n    if ($profile) {\\n        $notify = $modx->getObject(\'quipCommentNotify\',array(\\n            \'email\' => $profile->get(\'email\'),\\n            \'thread\' => $thread,\\n        ));\\n        if ($notify && $notify->remove()) {\\n            $placeholders[\'successMsg\'] = $modx->lexicon(\'quip.unsubscribed\');\\n        }\\n    }\\n}\\n\\n\\/* if using recaptcha, load recaptcha html if user is not logged in *\\/\\n$disableRecaptchaWhenLoggedIn = (boolean)$modx->getOption(\'disableRecaptchaWhenLoggedIn\',$scriptProperties,true);\\n$useRecaptcha = (boolean)$modx->getOption(\'recaptcha\',$scriptProperties,false);\\nif ($useRecaptcha && !($disableRecaptchaWhenLoggedIn && $hasAuth) && !$hasPreview) {\\n    $recaptcha = $modx->getService(\'recaptcha\',\'reCaptcha\',$quip->config[\'modelPath\'].\'recaptcha\\/\');\\n    if ($recaptcha instanceof reCaptcha) {\\n        $recaptchaTheme = $modx->getOption(\'recaptchaTheme\',$scriptProperties,\'clean\');\\n        $html = $recaptcha->getHtml($recaptchaTheme);\\n        $modx->setPlaceholder(\'quip.recaptcha_html\',$html);\\n    } else {\\n        return $modx->lexicon(\'quip.recaptcha_err_load\');\\n    }\\n}\\n\\n\\/* build reply form *\\/\\n$replyForm = \'\';\\n\\n$stillOpen = $thread->checkIfStillOpen($closeAfter) && !$modx->getOption(\'closed\',$scriptProperties,false);\\nif ($hasAuth && $stillOpen) {\\n    $phs = array_merge($placeholders,array(\\n        \'username\' => $modx->user->get(\'username\'),\\n    ));\\n    $phs[\'unsubscribe\'] = \'\';\\n\\n    \\/* prefill fields *\\/\\n    $profile = $modx->user->getOne(\'Profile\');\\n    if ($profile) {\\n        $phs[\'name\'] = !empty($fields[\'name\']) ? $fields[\'name\'] : $profile->get(\'fullname\');\\n        $phs[\'email\'] = !empty($fields[\'email\']) ? $fields[\'email\'] : $profile->get(\'email\');\\n        $phs[\'website\'] = !empty($fields[\'website\']) ? $fields[\'website\'] : $profile->get(\'website\');\\n\\n        \\/* allow for unsubscribing for logged-in users *\\/\\n        if ($modx->user->hasSessionContext($modx->context->get(\'key\'))) {\\n            $notify = $modx->getObject(\'quipCommentNotify\',array(\\n                \'email\' => $profile->get(\'email\'),\\n                \'thread\' => $thread,\\n            ));\\n            if ($notify) {\\n                $phs[\'notifyId\'] = $notify->get(\'id\');\\n                $phs[\'unsubscribe\'] = $quip->getChunk(\'quipUnsubscribe\',$phs);\\n                $params = $modx->request->getParameters();\\n                $params[$unsubscribeAction] = 1;\\n                $phs[\'unsubscribeUrl\'] = $modx->makeUrl($modx->resource->get(\'id\'),\'\',$params);\\n            }\\n        }\\n    }\\n\\n    \\/* if requirePreview == false, auto-can post *\\/\\n    if (!$requirePreview) {\\n        $phs[\'can_post\'] = true;\\n    }\\n    $phs[\'post_action\'] = $postAction;\\n    $phs[\'preview_action\'] = $previewAction;\\n    $phs[\'allowed_tags\'] = $allowedTags;\\n    $phs[\'notifyChecked\'] = !empty($fields[\'notify\']) ? \' checked=\\"checked\\"\' : \'\';\\n\\n    $replyForm = $quip->getChunk($addCommentTpl,$phs);\\n} else if (!$stillOpen) {\\n    $replyForm = $modx->lexicon(\'quip.thread_autoclosed\');\\n} else {\\n    $replyForm = $quip->getChunk($loginToCommentTpl,$placeholders);\\n}\\n\\n\\/* output or set to placeholder *\\/\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\nif ($toPlaceholder) {\\n    $modx->setPlaceholder($toPlaceholder,$replyForm);\\n    return \'\';\\n}\\nreturn $replyForm;"}',
        'guid' => '9ef48f516983d5a669c5919923f8a6c1',
        'native_key' => NULL,
        'signature' => 'c859f484cfa4eec5fd0f8c9780923ac0',
      ),
      '022ef7488637bdbe82e6016d7ae27d28' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"QuipRss","description":"Generates an RSS of latest comments for a thread or by a user.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Quip\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Quip, a simple commenting component for MODx Revolution.\\n *\\n * Quip is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Quip is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Quip; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package quip\\n *\\/\\n\\/**\\n * QuipLatestComments\\n *\\n * Generates an RSS of latest comments for a thread or by a user.\\n *\\n * @var Quip $quip\\n * @var modX $modx\\n * @var array $scriptProperties\\n * \\n * @name QuipRss\\n * @author Shaun McCormick <shaun@modx.com>\\n * @package quip\\n *\\/\\n$quip = $modx->getService(\'quip\',\'Quip\',$modx->getOption(\'quip.core_path\',null,$modx->getOption(\'core_path\').\'components\\/quip\\/\').\'model\\/quip\\/\',$scriptProperties);\\nif (!($quip instanceof Quip)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$type = $modx->getOption(\'type\',$scriptProperties,\'all\');\\n$tpl = $modx->getOption(\'tpl\',$scriptProperties,\'quipRssComment\');\\n$containerTpl = $modx->getOption(\'containerTpl\',$scriptProperties,\'quipRssContainer\');\\n$limit = $modx->getOption(\'limit\',$scriptProperties,5);\\n$start = $modx->getOption(\'start\',$scriptProperties,0);\\n$sortBy = $modx->getOption(\'sortBy\',$scriptProperties,\'createdon\');\\n$sortByAlias = $modx->getOption(\'sortByAlias\',$scriptProperties,\'quipComment\');\\n$sortDir = $modx->getOption(\'sortDir\',$scriptProperties,\'DESC\');\\n\\n$dateFormat = $modx->getOption(\'dateFormat\',$scriptProperties,\'%b %d, %Y at %I:%M %p\');\\n$stripTags = $modx->getOption(\'stripTags\',$scriptProperties,true);\\n$bodyLimit = $modx->getOption(\'bodyLimit\',$scriptProperties,30);\\n\\n$pagetitle = $modx->getOption(\'pagetitle\',$scriptProperties,\'\');\\n\\n\\/* build query by type *\\/\\n$c = $modx->newQuery(\'quipComment\');\\n$c->select($modx->getSelectColumns(\'quipComment\',\'quipComment\'));\\n$c->select(array(\\n    \'Resource.pagetitle\',\\n));\\n$c->leftJoin(\'modUser\',\'Author\');\\n$c->leftJoin(\'modResource\',\'Resource\');\\nswitch ($type) {\\n    case \'user\':\\n        if (empty($scriptProperties[\'user\'])) return \'\';\\n        if (is_numeric($scriptProperties[\'user\'])) {\\n            $c->where(array(\\n                \'Author.id\' => $scriptProperties[\'user\'],\\n            ));\\n        } else {\\n            $c->where(array(\\n                \'Author.username\' => $scriptProperties[\'user\'],\\n            ));\\n        }\\n        break;\\n    case \'thread\':\\n        if (empty($scriptProperties[\'thread\'])) return \'\';\\n        $c->where(array(\\n            \'quipComment.thread\' => $scriptProperties[\'thread\'],\\n        ));\\n        break;\\n    case \'family\':\\n        if (empty($scriptProperties[\'family\'])) return \'\';\\n        $c->where(array(\\n            \'quipComment.thread:LIKE\' => $scriptProperties[\'family\'],\\n        ));\\n        break;\\n    case \'all\':\\n    default:\\n        break;\\n}\\n$contexts = $modx->getOption(\'contexts\',$scriptProperties,\'\');\\nif (!empty($contexts)) {\\n    $c->where(array(\\n        \'Resource.context_key:IN\' => explode(\',\',$contexts),\\n    ));\\n}\\n$c->where(array(\\n    \'quipComment.deleted\' => false,\\n    \'quipComment.approved\' => true,\\n));\\n$c->sortby(\'`\'.$sortByAlias.\'`.`\'.$sortBy.\'`\',$sortDir);\\n$c->limit($limit,$start);\\n$comments = $modx->getCollection(\'quipComment\',$c);\\n\\n\\/* iterate *\\/\\n$pagePlaceholders = array();\\n$output = array();\\n$alt = false;\\n$commentArray = array();\\n\\/** @var quipComment $comment *\\/\\nforeach ($comments as $comment) {\\n    $commentArray = $comment->toArray();\\n    $commentArray[\'bodyLimit\'] = $bodyLimit;\\n    $commentArray[\'url\'] = $comment->makeUrl(0,array(),array(\\n        \'scheme\' => \'full\',\\n    ));\\n\\n    if (!empty($stripTags)) { $commentArray[\'body\'] = strip_tags($commentArray[\'body\']); }\\n\\n    $commentArray[\'ago\'] = $quip->getTimeAgo($commentArray[\'createdon\']);\\n\\n    $output[] = $quip->getChunk($tpl,$commentArray);\\n    $alt = !$alt;\\n}\\n\\n\\/* set page placeholders *\\/\\n$pagePlaceholders = array();\\n$pagePlaceholders[\'resource\'] = $commentArray[\'resource\'];\\n$pagePlaceholders[\'pagetitle\'] = empty($pagetitle)? $commentArray[\'pagetitle\'] : $pagetitle;\\n$placeholderPrefix = $modx->getOption(\'placeholderPrefix\',$scriptProperties,\'quip.latest\');\\n$modx->toPlaceholders($pagePlaceholders,$placeholderPrefix);\\n\\n\\/* generate output and wrap *\\/\\n$outputSeparator = $modx->getOption(\'outputSeparator\',$scriptProperties,\\"\\\\n\\");\\n$output = implode($outputSeparator,$output);\\n\\nif (!empty($containerTpl)) {\\n    $output = $quip->getChunk($containerTpl,array(\\n        \'comments\' => $output,\\n    ));\\n}\\n\\n\\/* set to placeholder or return output *\\/\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\nif ($toPlaceholder) {\\n    $modx->setPlaceholder($toPlaceholder,$output);\\n    return \'\';\\n}\\nreturn $output;","locked":0,"properties":"a:17:{s:4:\\"type\\";a:7:{s:4:\\"name\\";s:4:\\"type\\";s:4:\\"desc\\";s:24:\\"quip.prop_late_type_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:5:\\"value\\";s:3:\\"all\\";s:4:\\"text\\";s:8:\\"quip.all\\";}i:1;a:2:{s:5:\\"value\\";s:6:\\"thread\\";s:4:\\"text\\";s:11:\\"quip.thread\\";}i:2;a:2:{s:5:\\"value\\";s:6:\\"family\\";s:4:\\"text\\";s:11:\\"quip.family\\";}i:3;a:2:{s:5:\\"value\\";s:4:\\"user\\";s:4:\\"text\\";s:9:\\"quip.user\\";}}s:5:\\"value\\";s:3:\\"all\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:22:\\"quip.prop_rss_tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:14:\\"quipRssComment\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"containerTpl\\";a:7:{s:4:\\"name\\";s:12:\\"containerTpl\\";s:4:\\"desc\\";s:31:\\"quip.prop_rss_containertpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:16:\\"quipRssContainer\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"thread\\";a:7:{s:4:\\"name\\";s:6:\\"thread\\";s:4:\\"desc\\";s:26:\\"quip.prop_late_thread_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:4:\\"user\\";a:7:{s:4:\\"name\\";s:4:\\"user\\";s:4:\\"desc\\";s:24:\\"quip.prop_late_user_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"family\\";a:7:{s:4:\\"name\\";s:6:\\"family\\";s:4:\\"desc\\";s:26:\\"quip.prop_late_family_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"stripTags\\";a:7:{s:4:\\"name\\";s:9:\\"stripTags\\";s:4:\\"desc\\";s:29:\\"quip.prop_late_striptags_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"dateFormat\\";a:7:{s:4:\\"name\\";s:10:\\"dateFormat\\";s:4:\\"desc\\";s:30:\\"quip.prop_late_dateformat_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:21:\\"%b %d, %Y at %I:%M %p\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"bodyLimit\\";a:7:{s:4:\\"name\\";s:9:\\"bodyLimit\\";s:4:\\"desc\\";s:29:\\"quip.prop_late_bodylimit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:30;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"limit\\";a:7:{s:4:\\"name\\";s:5:\\"limit\\";s:4:\\"desc\\";s:25:\\"quip.prop_late_limit_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:5;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"start\\";a:7:{s:4:\\"name\\";s:5:\\"start\\";s:4:\\"desc\\";s:25:\\"quip.prop_late_start_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:0;s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortBy\\";a:7:{s:4:\\"name\\";s:6:\\"sortBy\\";s:4:\\"desc\\";s:26:\\"quip.prop_late_sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:9:\\"createdon\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"sortByAlias\\";a:7:{s:4:\\"name\\";s:11:\\"sortByAlias\\";s:4:\\"desc\\";s:31:\\"quip.prop_late_sortbyalias_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:12:\\"quip.comment\\";s:5:\\"value\\";s:11:\\"quipComment\\";}i:1;a:2:{s:4:\\"text\\";s:11:\\"quip.author\\";s:5:\\"value\\";s:6:\\"Author\\";}}s:5:\\"value\\";s:11:\\"quipComment\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortDir\\";a:7:{s:4:\\"name\\";s:7:\\"sortDir\\";s:4:\\"desc\\";s:27:\\"quip.prop_late_sortdir_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:14:\\"quip.ascending\\";s:5:\\"value\\";s:3:\\"ASC\\";}i:1;a:2:{s:4:\\"text\\";s:15:\\"quip.descending\\";s:5:\\"value\\";s:4:\\"DESC\\";}}s:5:\\"value\\";s:4:\\"DESC\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"contexts\\";a:7:{s:4:\\"name\\";s:8:\\"contexts\\";s:4:\\"desc\\";s:28:\\"quip.prop_late_contexts_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:33:\\"quip.prop_late_toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:36:\\"quip.prop_rss_placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:11:\\"quip.latest\\";s:7:\\"lexicon\\";s:15:\\"quip:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Quip\\n *\\n * Copyright 2010-11 by Shaun McCormick <shaun@modx.com>\\n *\\n * This file is part of Quip, a simple commenting component for MODx Revolution.\\n *\\n * Quip is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Quip is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Quip; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package quip\\n *\\/\\n\\/**\\n * QuipLatestComments\\n *\\n * Generates an RSS of latest comments for a thread or by a user.\\n *\\n * @var Quip $quip\\n * @var modX $modx\\n * @var array $scriptProperties\\n * \\n * @name QuipRss\\n * @author Shaun McCormick <shaun@modx.com>\\n * @package quip\\n *\\/\\n$quip = $modx->getService(\'quip\',\'Quip\',$modx->getOption(\'quip.core_path\',null,$modx->getOption(\'core_path\').\'components\\/quip\\/\').\'model\\/quip\\/\',$scriptProperties);\\nif (!($quip instanceof Quip)) return \'\';\\n\\n\\/* setup default properties *\\/\\n$type = $modx->getOption(\'type\',$scriptProperties,\'all\');\\n$tpl = $modx->getOption(\'tpl\',$scriptProperties,\'quipRssComment\');\\n$containerTpl = $modx->getOption(\'containerTpl\',$scriptProperties,\'quipRssContainer\');\\n$limit = $modx->getOption(\'limit\',$scriptProperties,5);\\n$start = $modx->getOption(\'start\',$scriptProperties,0);\\n$sortBy = $modx->getOption(\'sortBy\',$scriptProperties,\'createdon\');\\n$sortByAlias = $modx->getOption(\'sortByAlias\',$scriptProperties,\'quipComment\');\\n$sortDir = $modx->getOption(\'sortDir\',$scriptProperties,\'DESC\');\\n\\n$dateFormat = $modx->getOption(\'dateFormat\',$scriptProperties,\'%b %d, %Y at %I:%M %p\');\\n$stripTags = $modx->getOption(\'stripTags\',$scriptProperties,true);\\n$bodyLimit = $modx->getOption(\'bodyLimit\',$scriptProperties,30);\\n\\n$pagetitle = $modx->getOption(\'pagetitle\',$scriptProperties,\'\');\\n\\n\\/* build query by type *\\/\\n$c = $modx->newQuery(\'quipComment\');\\n$c->select($modx->getSelectColumns(\'quipComment\',\'quipComment\'));\\n$c->select(array(\\n    \'Resource.pagetitle\',\\n));\\n$c->leftJoin(\'modUser\',\'Author\');\\n$c->leftJoin(\'modResource\',\'Resource\');\\nswitch ($type) {\\n    case \'user\':\\n        if (empty($scriptProperties[\'user\'])) return \'\';\\n        if (is_numeric($scriptProperties[\'user\'])) {\\n            $c->where(array(\\n                \'Author.id\' => $scriptProperties[\'user\'],\\n            ));\\n        } else {\\n            $c->where(array(\\n                \'Author.username\' => $scriptProperties[\'user\'],\\n            ));\\n        }\\n        break;\\n    case \'thread\':\\n        if (empty($scriptProperties[\'thread\'])) return \'\';\\n        $c->where(array(\\n            \'quipComment.thread\' => $scriptProperties[\'thread\'],\\n        ));\\n        break;\\n    case \'family\':\\n        if (empty($scriptProperties[\'family\'])) return \'\';\\n        $c->where(array(\\n            \'quipComment.thread:LIKE\' => $scriptProperties[\'family\'],\\n        ));\\n        break;\\n    case \'all\':\\n    default:\\n        break;\\n}\\n$contexts = $modx->getOption(\'contexts\',$scriptProperties,\'\');\\nif (!empty($contexts)) {\\n    $c->where(array(\\n        \'Resource.context_key:IN\' => explode(\',\',$contexts),\\n    ));\\n}\\n$c->where(array(\\n    \'quipComment.deleted\' => false,\\n    \'quipComment.approved\' => true,\\n));\\n$c->sortby(\'`\'.$sortByAlias.\'`.`\'.$sortBy.\'`\',$sortDir);\\n$c->limit($limit,$start);\\n$comments = $modx->getCollection(\'quipComment\',$c);\\n\\n\\/* iterate *\\/\\n$pagePlaceholders = array();\\n$output = array();\\n$alt = false;\\n$commentArray = array();\\n\\/** @var quipComment $comment *\\/\\nforeach ($comments as $comment) {\\n    $commentArray = $comment->toArray();\\n    $commentArray[\'bodyLimit\'] = $bodyLimit;\\n    $commentArray[\'url\'] = $comment->makeUrl(0,array(),array(\\n        \'scheme\' => \'full\',\\n    ));\\n\\n    if (!empty($stripTags)) { $commentArray[\'body\'] = strip_tags($commentArray[\'body\']); }\\n\\n    $commentArray[\'ago\'] = $quip->getTimeAgo($commentArray[\'createdon\']);\\n\\n    $output[] = $quip->getChunk($tpl,$commentArray);\\n    $alt = !$alt;\\n}\\n\\n\\/* set page placeholders *\\/\\n$pagePlaceholders = array();\\n$pagePlaceholders[\'resource\'] = $commentArray[\'resource\'];\\n$pagePlaceholders[\'pagetitle\'] = empty($pagetitle)? $commentArray[\'pagetitle\'] : $pagetitle;\\n$placeholderPrefix = $modx->getOption(\'placeholderPrefix\',$scriptProperties,\'quip.latest\');\\n$modx->toPlaceholders($pagePlaceholders,$placeholderPrefix);\\n\\n\\/* generate output and wrap *\\/\\n$outputSeparator = $modx->getOption(\'outputSeparator\',$scriptProperties,\\"\\\\n\\");\\n$output = implode($outputSeparator,$output);\\n\\nif (!empty($containerTpl)) {\\n    $output = $quip->getChunk($containerTpl,array(\\n        \'comments\' => $output,\\n    ));\\n}\\n\\n\\/* set to placeholder or return output *\\/\\n$toPlaceholder = $modx->getOption(\'toPlaceholder\',$scriptProperties,false);\\nif ($toPlaceholder) {\\n    $modx->setPlaceholder($toPlaceholder,$output);\\n    return \'\';\\n}\\nreturn $output;"}',
        'guid' => '87d5190bf088477c6946204c4fe9f731',
        'native_key' => NULL,
        'signature' => '2fe150c33057c8797cf9d8753bc5eed4',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'quip',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"quip-2.3.3-pl\\/modCategory\\/5888e14b1c8e5c8ae6c287c24a9db855\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"quip"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"quip-2.3.3-pl\\/modCategory\\/5888e14b1c8e5c8ae6c287c24a9db855\\/1\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"quip"}',
    ),
    2 => 
    array (
      'type' => 'php',
      'body' => '{"source":"quip-2.3.3-pl\\/modCategory\\/5888e14b1c8e5c8ae6c287c24a9db855.tables.resolver.resolver","type":"php","name":"tables.resolver"}',
    ),
    3 => 
    array (
      'type' => 'php',
      'body' => '{"source":"quip-2.3.3-pl\\/modCategory\\/5888e14b1c8e5c8ae6c287c24a9db855.dbchanges.resolver.resolver","type":"php","name":"dbchanges.resolver"}',
    ),
    4 => 
    array (
      'type' => 'php',
      'body' => '{"source":"quip-2.3.3-pl\\/modCategory\\/5888e14b1c8e5c8ae6c287c24a9db855.fixranks.resolver.resolver","type":"php","name":"fixranks.resolver"}',
    ),
    5 => 
    array (
      'type' => 'php',
      'body' => '{"source":"quip-2.3.3-pl\\/modCategory\\/5888e14b1c8e5c8ae6c287c24a9db855.setupoptions.resolver.resolver","type":"php","name":"setupoptions.resolver"}',
    ),
    6 => 
    array (
      'type' => 'php',
      'body' => '{"source":"quip-2.3.3-pl\\/modCategory\\/5888e14b1c8e5c8ae6c287c24a9db855.policy.resolver.resolver","type":"php","name":"policy.resolver"}',
    ),
    7 => 
    array (
      'type' => 'php',
      'body' => '{"source":"quip-2.3.3-pl\\/modCategory\\/5888e14b1c8e5c8ae6c287c24a9db855.oldfiles.resolver.resolver","type":"php","name":"oldfiles.resolver"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '0c1327b5981d424147e1b1dd22cb7407',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '5888e14b1c8e5c8ae6c287c24a9db855',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"Quip"}',
);